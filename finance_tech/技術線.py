# -*- coding: utf-8 -*-
"""技術線.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YgIB1pMnnSTBTaaS37z5Hox0RXUj5Rkc
"""

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
!pip install mpl_finance
!pip install pandas
!pip install numpy
!pip install mplfinance
!wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
!tar -xzvf ta-lib-0.4.0-src.tar.gz
# %cd ta-lib
!./configure --prefix=/usr
!make
!make install
!pip install Ta-Lib

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import datetime
import matplotlib
import mplfinance as mpf
import mpl_finance as mpl

df = pd.read_csv('/content/drive/MyDrive/金融大數據/技術線/TSLA.csv', parse_dates=True, index_col=0)
df = df.drop(['Adj Close'], axis=1)
df.head()

mc = mpf.make_marketcolors(up='r',down='g',inherit=True)
s  = mpf.make_mpf_style(base_mpf_style='yahoo',marketcolors=mc)
kwargs = dict(type='candle', figratio=(20,5), figscale=0.75, title='TSLA 2022', style=s)
mpf.plot(df, **kwargs)

import talib

df2 = pd.read_csv('/content/drive/MyDrive/金融大數據/技術線/TSLA.csv')
df2.index = pd.to_datetime(df2['Date'])

sma_5 = talib.SMA(np.array(df2['Close']), 5)
sma_10 = talib.SMA(np.array(df2['Close']), 10)

fig = plt.figure(figsize=(25, 5))
ax = fig.add_subplot(1, 1, 1)
df2.index = pd.to_datetime(df2['Date'])
ax.set_xticks(range(0, len(df2.index), 20))
ax.set_xticklabels(df2.index[::10])
mpl.candlestick2_ochl(ax, df2['Open'], df2['Close'], df2['High'],
                      df2['Low'], width=0.6, colorup='r', colordown='g', alpha=0.75)
plt.rcParams['font.sans-serif']=['Microsoft JhengHei'] 
ax.plot(sma_5, label='5日均線')
ax.plot(sma_10, label='10日均線')
ax.legend();

def rsi_cal(close_p, days):
  close = close_p.shift(1)
  change = close - close.shift(1)#計算跟昨天收盤價的差距
  #change.dropna(inplace=True)

  up_price = pd.Series(0.0,index=change.index)
  up_price[change>0] = change[change>0]

  down_price = pd.Series(0.0,index=change.index)
  down_price[change<0] = -change[change<0]

  rsi_data = pd.concat([close, change, up_price, down_price], axis=1)
  rsi_data.columns = ['close','change','up_price','down_price']
  #rsi_data.dropna(inplace=True)
  rsi = pd.Series([np.nan]*len(change),index=change.index)

  for i in range(days,len(rsi)+1):#平均上漲/平均上漲+平均下跌 *100
      rsi[i-1] = 100 * np.mean(rsi_data['up_price'][i-days:i]) / ( np.mean(rsi_data['up_price'][i-days:i]) + np.mean(rsi_data['down_price'][i-days:i]) ) 
  return rsi

rsi_6_TSLA = rsi_cal(close_p=df['Close'], days=6)
rsi_12_TSLA = rsi_cal(close_p=df['Close'], days=12)
#print(rsi_6_TSLA.shape, rsi_12_TSLA.shape, df.shape)


plt.figure(figsize=(25,5))
plt.plot(df.index, rsi_6_TSLA, 'r-')
plt.plot(df.index, rsi_12_TSLA, 'g-')
plt.ylabel('RSI')
plt.title('TSLA')
plt.legend(['RSI6', 'RSI12'])
plt.show()

def kd_cal(stock):
    close = stock['Close']
    high = stock['High']
    low = stock['Low']
    highest = pd.Series(data=np.nan,index=stock.index)
    lowest = pd.Series(data=np.nan,index=stock.index)
    RSV = pd.Series(data=np.nan,index=stock.index)
    
    for i in range(8,len(highest)):#從第9天起算
        highest[i] = np.max(high[i-8:i+1]) #9日最高價
        lowest[i] = np.min(low[i-8:i+1]) #9日最低價
        RSV[i] = 100 * (close[i] - lowest[i]) / (highest[i] - lowest[i]) #RSV公式：(今日價-9日最低價)/(9日最高價-9日最低價)*100
        
    close_RSV = pd.DataFrame(data={'close': close, 'RSV': RSV}) #二維資料 每日收盤價對應的rsv
    #close_RSV.dropna(inplace=True) #rsv[0~7]都沒有值
    #print(close_RSV)

    K = pd.Series(data=np.nan,index=close_RSV.index)
    D = pd.Series(data=np.nan,index=close_RSV.index)
    K[7] = 86.02 #從yahoo finance看2022/4/1的KD值 (3/23是第1天(k[0])->4/1是8天(k[7])，也就是4/4(k[8])的前一天)
    D[7] = 90.09
    
    for i in range(8,len(K)):#從22/4/4(k[8]第9天)開始算KD值，因為rsv第9天才有值
        K[i] = (2/3)*K[i-1] + (1/3)*close_RSV['RSV'][i] #2/3*昨天的K + 1/3*今日rsv
        D[i] = (2/3)*D[i-1] + (1/3)*K[i] #2/3*昨天的D + 1/3*今日的K
        
    return K,D

k_TSLA, d_TSLA = kd_cal(df)
#print(k_TSLA, d_TSLA)

plt.figure(figsize=(25,5))
plt.plot(df.index, k_TSLA, 'r-')
plt.plot(df.index, d_TSLA, 'g-')
plt.ylabel('KD(9)')
plt.title('TSLA')
plt.legend(['K', 'D'])
plt.show()

#macd
df1 = pd.read_csv('/content/drive/MyDrive/金融大數據/技術線/TSLA.csv')
df1.index = pd.to_datetime(df1['Date'])
df1['12_ema'] = df1['Close'].ewm(span = 12).mean()
df1['26_ema'] = df1['Close'].ewm(span = 26).mean()
df1['dif'] = df1['12_ema']  - df1['26_ema']#快線
df1['macd'] = df1['dif'].ewm(span = 9).mean()#慢線
df1['dea'] = df1['dif'] - df1['macd'] #柱線

plt.figure(figsize=(25,5))
plt.plot(df1['Date'], df1['dif'], 'r-')
plt.plot(df1['Date'], df1['macd'], 'g-')
plt.bar(df1['Date'], df1['dea'])
plt.title('TSLA')
plt.xticks(rotation = 90)
plt.legend(['fast', 'slow','macd'])
plt.show()
